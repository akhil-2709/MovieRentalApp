@page "/movie/{id:int}"
@inject IMovieService MovieService
@inject ICartService CartService

@if(movie == null)
{
        <span>@message</span>
}
else
{
        <div class="media">
            <div class="media-img-wrapper mr-2">
                <img class="media-img" src="@movie.ImageUrl" alt="@movie.Title" />
            </div>
            <div class="media-body">
                <h2 class="mb-0">@movie.Title</h2>
                <p>@movie.Description</p>
                @if (movie.Variants !=null && movie.Variants.Count > 1)
                 {
                        <div>
                            <select class="form-select" @bind="currentTypeId">
                                @foreach (var variant in movie.Variants)
                                 {
                                        <option value="@variant.MovieTypeId">@variant.MovieType.Name</option>
                                 }
                            </select>
                        </div>
                 }
                @if (GetSelectedVariant() != null)
                {
                    @if (GetSelectedVariant().WeekendPrice > GetSelectedVariant().WeekDayPrice)
                     {
                        <h6 class="text-muted weekend-price">
                            Weekends: $@GetSelectedVariant().WeekendPrice
                        </h6>
                     }
                     <h6 class="weekday-price">
                        Weekdays: $@GetSelectedVariant().WeekDayPrice
                     </h6>
                }
                    <button class="btn btn-primary" @onclick="AddToCart">
                        <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart
                    </button>
            </div>
        </div>
}

@code {
    private Movie? movie = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading Movies...";
        var result = await MovieService.GetMovie(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            movie = result.Data;
            if (movie.Variants.Count > 0)
            {
                currentTypeId = movie.Variants[0].MovieTypeId;
            }
        }
    }
    private MovieVariant GetSelectedVariant()
    {
        var variant = movie.Variants.FirstOrDefault(v => v.MovieTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var movieVariant = GetSelectedVariant();
        var cartItem = new CartItem
        {
            MovieId = movieVariant.MovieId,
            MovieTypeId = movieVariant.MovieTypeId
        };

        await CartService.AddToCart(cartItem);
    }

}

